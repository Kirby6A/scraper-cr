# Generated by Django 4.2.7 on 2025-08-08 04:53

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    dependencies = [
        ("tasks", "0003_task_last_scheduled_run_task_schedule_cron_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="DataVersion",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "diff_data",
                    models.JSONField(
                        default=dict, help_text="Changes between executions"
                    ),
                ),
                (
                    "diff_summary",
                    models.JSONField(
                        default=dict, help_text="Summary statistics of changes"
                    ),
                ),
                (
                    "change_type",
                    models.CharField(
                        choices=[
                            ("initial", "Initial Version"),
                            ("update", "Data Updated"),
                            ("schema_change", "Schema Changed"),
                            ("full_change", "Complete Change"),
                        ],
                        default="update",
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "execution_from",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="version_from",
                        to="tasks.taskexecution",
                    ),
                ),
                (
                    "execution_to",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="version_to",
                        to="tasks.taskexecution",
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="versions",
                        to="tasks.task",
                    ),
                ),
            ],
            options={
                "db_table": "data_versions",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["task", "created_at"],
                        name="data_versio_task_id_88d720_idx",
                    ),
                    models.Index(
                        fields=["execution_from", "execution_to"],
                        name="data_versio_executi_d455b3_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="DataTransformation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "transformation_type",
                    models.CharField(
                        choices=[
                            ("field_mapping", "Field Mapping"),
                            ("type_conversion", "Type Conversion"),
                            ("aggregation", "Aggregation"),
                            ("filter", "Filter"),
                            ("custom", "Custom Function"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "rules",
                    models.JSONField(
                        default=dict, help_text="Transformation rules configuration"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "apply_order",
                    models.IntegerField(
                        default=0,
                        help_text="Order in which transformations are applied",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "task",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transformations",
                        to="tasks.task",
                    ),
                ),
            ],
            options={
                "db_table": "data_transformations",
                "ordering": ["apply_order", "created_at"],
                "indexes": [
                    models.Index(
                        fields=["task", "is_active"],
                        name="data_transf_task_id_5bd286_idx",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="DataQuery",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "query_filters",
                    models.JSONField(default=dict, help_text="JSONB query filters"),
                ),
                (
                    "query_type",
                    models.CharField(
                        choices=[
                            ("jsonb", "JSONB Query"),
                            ("text_search", "Full Text Search"),
                            ("date_range", "Date Range"),
                            ("aggregate", "Aggregation"),
                        ],
                        default="jsonb",
                        max_length=50,
                    ),
                ),
                ("is_public", models.BooleanField(default=False)),
                ("created_by", models.CharField(blank=True, max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "task",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="queries",
                        to="tasks.task",
                    ),
                ),
            ],
            options={
                "db_table": "data_queries",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["task", "query_type"],
                        name="data_querie_task_id_95baa7_idx",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="DataExport",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "format",
                    models.CharField(
                        choices=[
                            ("csv", "CSV"),
                            ("json", "JSON"),
                            ("excel", "Excel"),
                            ("parquet", "Parquet"),
                            ("xml", "XML"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "filters",
                    models.JSONField(
                        default=dict, help_text="Applied filters during export"
                    ),
                ),
                ("file_path", models.CharField(blank=True, max_length=500)),
                ("file_size", models.BigIntegerField(blank=True, null=True)),
                ("row_count", models.IntegerField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                (
                    "export_config",
                    models.JSONField(
                        default=dict, help_text="Format-specific configuration"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "executions",
                    models.ManyToManyField(
                        blank=True, related_name="exports", to="tasks.taskexecution"
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="exports",
                        to="tasks.task",
                    ),
                ),
            ],
            options={
                "db_table": "data_exports",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["status", "created_at"],
                        name="data_export_status_df5ddc_idx",
                    )
                ],
            },
        ),
    ]
